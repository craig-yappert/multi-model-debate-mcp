version: '3.8'

services:
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: multi-model-mcp-server
    environment:
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - CLAUDE_RESEARCH_BOT_TOKEN=${CLAUDE_RESEARCH_BOT_TOKEN}
      - PYTHONUNBUFFERED=1
    volumes:
      - ./config:/app/config:ro
      - ./src:/app/src:ro
    networks:
      - mcp-network
    restart: unless-stopped
    stdin_open: true
    tty: true
    # For stdio mode, we need to keep the container running
    command: ["python", "-c", "import asyncio; from src.mcp_server import main; asyncio.run(main())"]

  # If you want to run alongside Mattermost (optional)
  mattermost-db:
    image: postgres:13
    container_name: mattermost-db
    environment:
      - POSTGRES_DB=mattermost
      - POSTGRES_USER=mmuser
      - POSTGRES_PASSWORD=mmuser_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mcp-network
    profiles:
      - mattermost

  mattermost:
    image: mattermost/mattermost-team-edition:latest
    container_name: mattermost-server
    environment:
      - MM_SQLSETTINGS_DRIVERNAME=postgres
      - MM_SQLSETTINGS_DATASOURCE=postgres://mmuser:mmuser_password@mattermost-db:5432/mattermost?sslmode=disable&connect_timeout=10
      - MM_SERVICESETTINGS_SITEURL=http://localhost:8065
    ports:
      - "8065:8065"
    depends_on:
      - mattermost-db
    volumes:
      - mattermost_data:/mattermost/data
      - mattermost_logs:/mattermost/logs
      - mattermost_config:/mattermost/config
      - mattermost_plugins:/mattermost/plugins
    networks:
      - mcp-network
    profiles:
      - mattermost

networks:
  mcp-network:
    driver: bridge

volumes:
  postgres_data:
  mattermost_data:
  mattermost_logs:
  mattermost_config:
  mattermost_plugins: